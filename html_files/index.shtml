<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>PicoW Webserver | Advanced Control</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Orbitron:wght@400;500;700&family=Exo:wght@300;400;600&display=swap');

        :root {
            --deep-space-blue: #0D1229;
            --electric-blue: #00E5FF;
            --neon-blue: #1E90FF;
            --dark-blue-accent: #1A237E;
            --text-glow: #00FFFF;
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        @keyframes gradient-flow {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }

        @keyframes particle-movement {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 0.8;
            }
            100% {
                transform: translateY(100vh) rotate(360deg);
                opacity: 0;
            }
        }

        @keyframes wave-animation {
            0% {
                transform: translateX(-50%) rotate(0deg);
            }
            100% {
                transform: translateX(-50%) rotate(360deg);
            }
        }

        @keyframes pulse-glow {
            0%, 100% {
                box-shadow: 0 0 10px rgba(0,229,255,0.5),
                0 0 20px rgba(30,144,255,0.3);
            }
            50% {
                box-shadow: 0 0 20px rgba(0,229,255,0.7),
                0 0 40px rgba(30,144,255,0.5);
            }
        }

        @keyframes circuit-line {
            0% { stroke-dashoffset: 100%; }
            100% { stroke-dashoffset: 0; }
        }

        @keyframes float-element {
            0%, 100% { transform: translateY(0); }
            50% { transform: translateY(-10px); }
        }

        body, html {
            height: 100%;
            overflow: hidden;
        }

        body {
            font-family: 'Exo', sans-serif;
            background: #0F2027;
            background-size: 400% 400%;
            animation: gradient-flow 15s ease infinite;
            color: white;
            position: relative;
            display: flex;
            justify-content: center;
            align-items: center;
            perspective: 1000px;
        }

        .background-container {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            pointer-events: none;
        }

        .particle {
            position: absolute;
            background: radial-gradient(
                    circle,
                    rgba(0,229,255,0.3) 0%,
                    rgba(30,144,255,0.1) 70%
            );
            border-radius: 50%;
            opacity: 0.7;
            animation: particle-movement linear infinite;
        }

        .geometric-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0.1;
            z-index: 1;
            background-image:
                    linear-gradient(45deg, transparent 0%, rgba(0,229,255,0.05) 25%, transparent 50%),
                    linear-gradient(-45deg, transparent 0%, rgba(30,144,255,0.05) 25%, transparent 50%);
            background-size: 100px 100px;
            animation: wave-animation 40s linear infinite;
        }

        .circuit-overlay {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            opacity: 0.1;
            z-index: 2;
        }

        .webserver-panel {
            position: relative;
            background: rgba(13, 18, 41, 0.8);
            border-radius: 20px;
            box-shadow:
                    0 0 20px rgba(0, 229, 255, 0.3),
                    0 0 50px rgba(30, 144, 255, 0.2);
            padding: 3rem;
            width: 100%;
            max-width: 650px;
            border: 2px solid rgba(0, 229, 255, 0.2);
            backdrop-filter: blur(10px);
            transform: rotateX(15deg) rotateY(-15deg);
            transition: all 0.5s;
            z-index: 10;
            animation: float-element 4s infinite ease-in-out, pulse-glow 4s ease-in-out infinite alternate;
        }

        .webserver-panel:hover {
            transform: rotateX(0) rotateY(0) scale(1.02);
            box-shadow:
                    0 0 30px rgba(0, 229, 255, 0.5),
                    0 0 60px rgba(30, 144, 255, 0.3);
        }

        .header {
            text-align: center;
            margin-bottom: 2rem;
            position: relative;
        }

        .header h1 {
            font-family: 'Orbitron', sans-serif;
            font-weight: 700;
            font-size: 2.7rem;
            background: linear-gradient(45deg, var(--electric-blue), var(--neon-blue));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            display: inline-block;
            animation: pulse-glow 3s infinite;
        }

        .led-status {
            display: flex;
            align-items: center;
            background: rgba(0, 229, 255, 0.1);
            padding: 1.2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
            border: 1px solid rgba(0, 229, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        .led-status::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(to right, transparent, var(--electric-blue), transparent);
            animation: circuit-line 3s linear infinite;
        }

        .led-status i {
            font-size: 2.5rem;
            margin-right: 1.5rem;
            color: var(--electric-blue);
            animation: pulse-glow 2s infinite alternate;
        }

        .control-buttons {
            display: flex;
            gap: 1.5rem;
            justify-content: space-between;
        }

        .status-container {
            display: flex;
            gap: 1.5rem;
            margin-bottom: 2rem;
        }

        .status-panel {
            flex: 1;
            background: rgba(0, 229, 255, 0.1);
            padding: 1.2rem;
            border-radius: 15px;
            border: 1px solid rgba(0, 229, 255, 0.2);
            position: relative;
            overflow: hidden;
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .status-panel::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 2px;
            background: linear-gradient(to right, transparent, var(--electric-blue), transparent);
            animation: circuit-line 3s linear infinite;
        }

        .status-panel i {
            font-size: 2rem;
            animation: pulse-glow 2s infinite alternate;
        }

        .status-panel.food-ok i {
            color: #00ff00;
        }

        .status-panel.food-low i {
            color: #ff0000;
        }

        .status-message {
            position: fixed;
            top: 20px;
            right: 20px;
            padding: 1rem 2rem;
            border-radius: 10px;
            background: rgba(13, 18, 41, 0.9);
            border: 2px solid rgba(0, 229, 255, 0.5);
            color: white;
            z-index: 1000;
            display: none;
            animation: slideIn 0.3s ease-out;
        }

        @keyframes slideIn {
            from {
                transform: translateX(100%);
                opacity: 0;
            }
            to {
                transform: translateX(0);
                opacity: 1;
            }
        }

        .btn {
            flex-grow: 1;
            padding: 1.2rem;
            border: 2px solid rgba(0, 229, 255, 0.5);
            border-radius: 15px;
            background: linear-gradient(145deg, rgba(0, 229, 255, 0.1), rgba(30, 144, 255, 0.1));
            color: var(--electric-blue);
            font-weight: 600;
            text-transform: uppercase;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.8rem;
            cursor: pointer;
            transition: all 0.4s ease;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(120deg, transparent, rgba(255,255,255,0.2), transparent);
            transition: all 0.5s ease;
        }

        .btn:hover {
            transform: scale(1.05);
            box-shadow: 0 0 15px rgba(0, 229, 255, 0.5);
        }

        .btn:hover::before {
            left: 100%;
        }

        .btn i {
            font-size: 1.5rem;
            transition: transform 0.3s ease;
        }

        .btn:hover i {
            transform: rotate(360deg);
        }

        .refresh-link {
            display: block;
            text-align: center;
            margin-top: 1.5rem;
            color: var(--electric-blue);
            text-decoration: none;
            opacity: 0.7;
            transition: all 0.3s ease;
            font-family: 'Orbitron', sans-serif;
        }

        .refresh-link:hover {
            opacity: 1;
            transform: scale(1.1);
        }

        @media (max-width: 600px) {
            .webserver-panel {
                margin: 1rem;
                padding: 2rem;
                transform: none;
            }

            .control-buttons {
                flex-direction: column;
            }
        }


        .status-panel {
            display: flex;
            align-items: center;
            background: rgba(0, 229, 255, 0.1);
            padding: 1.2rem;
            border-radius: 15px;
            margin-bottom: 2rem;
            border: 1px solid rgba(0, 229, 255, 0.2);
            position: relative;
            overflow: hidden;
        }

        .status-panel i {
            font-size: 2.5rem;
            margin-right: 1.5rem;
        }

        .status-green i {
            color: #00ff00;
        }

        .status-red i {
            color: #ff0000;
        }
    </style>
</head>
<body>
<div class="background-container">
    <div class="geometric-overlay"></div>

    <svg class="circuit-overlay" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100" preserveAspectRatio="none">
        <defs>
            <linearGradient id="circuit-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                <stop offset="0%" style="stop-color:rgba(0, 229, 255, 0.2);stop-opacity:1" />
                <stop offset="100%" style="stop-color:rgba(30, 144, 255, 0.1);stop-opacity:1" />
            </linearGradient>
        </defs>
        <path d="M0,20 Q50,10 100,20 T200,30" fill="none" stroke="url(#circuit-gradient)" stroke-width="0.5" stroke-dasharray="5"
              style="animation: circuit-line 10s linear infinite;" />
    </svg>

    <script>
        const backgroundContainer = document.querySelector('.background-container');
        const particleCount = 100;

        function createParticle() {
            const particle = document.createElement('div');
            particle.classList.add('particle');

            const size = Math.random() * 15 + 2;
            particle.style.width = `${size}px`;
            particle.style.height = `${size}px`;

            particle.style.left = `${Math.random() * 100}%`;

            const duration = Math.random() * 20 + 10;
            particle.style.animationDuration = `${duration}s`;
            particle.style.animationDelay = `${Math.random() * 5}s`;

            backgroundContainer.appendChild(particle);

            particle.addEventListener('animationend', () => {
                particle.remove();
                createParticle();
            });
        }

        // Create initial particles
        for (let i = 0; i < particleCount; i++) {
            createParticle();
        }
    </script>
</div>

<div class="webserver-panel">
    <div class="header">
        <h1><i class="fas fa-robot"></i> Pet Feeder</h1>
    </div>

    <div class="led-status">
        <i class="fas fa-lightbulb"></i>
        <p>LED Status: <!--#led--></p>
    </div>

    <div class="status-panel <!--#food_class-->">
        <i class="fas fa-bowl-food"></i>
        <p>Food Level: <!--#food--></p>
    </div>

    <div class="status-panel">
        <i class="fas fa-clock"></i>
        <p>Dispenser Status: <!--#motor--></p>
    </div>

    <div class="control-buttons">
        <a href="/motor.cgi" class="btn">
            <i class="fas fa-utensils"></i> Dispense Food
        </a>
    </div>

    <a href="/index.shtml" class="refresh-link">
        <i class="fas fa-sync"></i> Refresh Page
    </a>
</div>

</body>
</html>